find_package(Git)
if(Git_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")
  message(STATUS "Git found: ${GIT_EXECUTABLE}")
  execute_process(COMMAND git rev-parse HEAD
		WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
		OUTPUT_VARIABLE GIT_REV
		OUTPUT_STRIP_TRAILING_WHITESPACE
		ERROR_QUIET
  )
  execute_process(COMMAND git diff-index --quiet HEAD --
		WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
		OUTPUT_QUIET ERROR_QUIET
		RESULT_VARIABLE GIT_LOCAL_CHANGES
		OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  execute_process(COMMAND git rev-list --count RELEASE.${PROJECT_VERSION}..HEAD
		WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
		OUTPUT_VARIABLE GIT_COMMIT_COUNTER
		RESULT_VARIABLE GIT_COMMIT_COUNTER_RESULT
		OUTPUT_STRIP_TRAILING_WHITESPACE
		ERROR_QUIET
  )
  if(NOT GIT_COMMIT_COUNTER_RESULT)
    string(REPLACE "." ";" VERSION_LIST ${PROJECT_VERSION})
    list(GET VERSION_LIST 0 V_MAJOR)
    list(GET VERSION_LIST 1 V_MINOR)
    list(GET VERSION_LIST 2 V_PATCH)
    math(EXPR V_PATCH "${V_PATCH} + ${GIT_COMMIT_COUNTER}")
    set(PROJECT_VERSION "${V_MAJOR}.${V_MINOR}.${V_PATCH}")
    message(STATUS "Commit counter: ${GIT_COMMIT_COUNTER} - ${GIT_REV} - ${PROJECT_VERSION}")
  endif()
endif()
message(STATUS "VERSION: ${PROJECT_VERSION}")

